name: Docker Image CI

on:
  push:
    branches: [ "main", "deploy-test" ]
  pull_request:
    branches: [ "main", "deploy-test" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-playbackservice:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Build and publish
        run: |
          dotnet publish -c Release tools/PlaybackService

      - name: Test
        run: |
          dotnet test -c Release --no-build tools/PlaybackService

      - name: Build Container Image
        uses: docker/build-push-action@v4
        with:
          context: tools/PlaybackService/src/
          tags: amstestpublic.azurecr.io/azure-media-migration/playback-service:${{ github.sha }}, amstestpublic.azurecr.io/azure-media-migration/playback-service:latest

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'push' }}
        with:
          registry: amstestpublic.azurecr.io
          username: amstestpublic
          password: ${{ secrets.AMSTESTPUBLIC_AZACR_PASSWORD }}

      - name: Push Container Image
        if: ${{ github.event_name == 'push' }}
        run: |
          docker push amstestpublic.azurecr.io/azure-media-migration/playback-service:${{ github.sha }}
          docker push amstestpublic.azurecr.io/azure-media-migration/playback-service:latest

      - name: Login Kubernets
        uses: azure/k8s-set-context@v1
        if: ${{ github.event_name == 'push' }}
        with:
          kubeconfig: '${{ secrets.AMSTEST_EASTUS_KUBECONFIG }}'

      - name: Deploy
        uses: Azure/k8s-deploy@v4
        if: ${{ github.event_name == 'push' }}
        with:
          namespace: amstest
          manifests: |
            tools/PlaybackService/deployment/playbackservice.yaml
          images: |
            amstestpublic.azurecr.io/azure-media-migration/playback-service:${{ github.sha }}